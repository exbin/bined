/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.bined.launcher.settings.gui;

import java.util.ResourceBundle;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.ButtonGroup;
import org.exbin.framework.App;
import org.exbin.framework.bined.launcher.settings.StartupOptions;
import org.exbin.framework.bined.launcher.settings.StartupOptions.StartupBehavior;
import org.exbin.framework.context.api.ApplicationContextProvider;
import org.exbin.framework.language.api.LanguageModuleApi;
import org.exbin.framework.options.settings.api.SettingsComponent;
import org.exbin.framework.options.settings.api.SettingsModifiedListener;
import org.exbin.framework.options.settings.api.SettingsOptionsProvider;
import org.exbin.framework.utils.TestApplication;
import org.exbin.framework.utils.UtilsModule;
import org.exbin.framework.utils.WindowUtils;

/**
 * Startup settings panel.
 */
@ParametersAreNonnullByDefault
public class StartupSettingsPanel extends javax.swing.JPanel implements SettingsComponent {

    private SettingsModifiedListener settingsModifiedListener;
    private final ResourceBundle resourceBundle = App.getModule(LanguageModuleApi.class).getBundle(StartupSettingsPanel.class);

    public StartupSettingsPanel() {
        initComponents();
        init();
    }

    private void init() {
        ButtonGroup buttonGroup = new ButtonGroup();
        buttonGroup.add(startEmptyRadioButton);
        buttonGroup.add(newFileRadioButton);
        buttonGroup.add(reopenSessionRadioButton);
    }

    @Nonnull
    @Override
    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }

    @Override
    public void loadFromOptions(SettingsOptionsProvider settingsOptionsProvider, @Nullable ApplicationContextProvider applicationContextProvider) {
        StartupOptions options = settingsOptionsProvider.getSettingsOptions(StartupOptions.class);
        StartupBehavior behavior = options.getStartupBehavior();
        switch (behavior) {
            case START_EMPTY:
                startEmptyRadioButton.setSelected(true);
                break;
            case NEW_FILE:
                newFileRadioButton.setSelected(true);
                break;
            case REOPEN_SESSION:
                reopenSessionRadioButton.setSelected(true);
                break;
        }
    }

    @Override
    public void saveToOptions(SettingsOptionsProvider settingsOptionsProvider, @Nullable ApplicationContextProvider applicationContextProvider) {
        StartupOptions options = settingsOptionsProvider.getSettingsOptions(StartupOptions.class);
        StartupBehavior behavior;
        if (startEmptyRadioButton.isSelected()) {
            behavior = StartupBehavior.START_EMPTY;
        } else if (newFileRadioButton.isSelected()) {
            behavior = StartupBehavior.NEW_FILE;
        } else {
            behavior = StartupBehavior.REOPEN_SESSION;
        }
        options.setStartupBehavior(behavior);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        startupBehaviorLabel = new javax.swing.JLabel();
        startEmptyRadioButton = new javax.swing.JRadioButton();
        newFileRadioButton = new javax.swing.JRadioButton();
        reopenSessionRadioButton = new javax.swing.JRadioButton();

        setName("Form"); // NOI18N

        startupBehaviorLabel.setText(resourceBundle.getString("startupBehaviorLabel.text")); // NOI18N
        startupBehaviorLabel.setName("startupBehaviorLabel"); // NOI18N

        startEmptyRadioButton.setText(resourceBundle.getString("startEmptyRadioButton.text")); // NOI18N
        startEmptyRadioButton.setName("startEmptyRadioButton"); // NOI18N
        startEmptyRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startEmptyRadioButtonActionPerformed(evt);
            }
        });

        newFileRadioButton.setSelected(true);
        newFileRadioButton.setText(resourceBundle.getString("newFileRadioButton.text")); // NOI18N
        newFileRadioButton.setName("newFileRadioButton"); // NOI18N
        newFileRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileRadioButtonActionPerformed(evt);
            }
        });

        reopenSessionRadioButton.setText(resourceBundle.getString("reopenSessionRadioButton.text")); // NOI18N
        reopenSessionRadioButton.setName("reopenSessionRadioButton"); // NOI18N
        reopenSessionRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reopenSessionRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(startupBehaviorLabel)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(startEmptyRadioButton)
                                                        .addComponent(newFileRadioButton)
                                                        .addComponent(reopenSessionRadioButton))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(startupBehaviorLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startEmptyRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newFileRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reopenSessionRadioButton)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void startEmptyRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startEmptyRadioButtonActionPerformed
        notifyModified();
    }//GEN-LAST:event_startEmptyRadioButtonActionPerformed

    private void newFileRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileRadioButtonActionPerformed
        notifyModified();
    }//GEN-LAST:event_newFileRadioButtonActionPerformed

    private void reopenSessionRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reopenSessionRadioButtonActionPerformed
        notifyModified();
    }//GEN-LAST:event_reopenSessionRadioButtonActionPerformed

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        TestApplication testApplication = UtilsModule.createTestApplication();
        testApplication.launch(() -> {
            testApplication.addModule(org.exbin.framework.language.api.LanguageModuleApi.MODULE_ID, new org.exbin.framework.language.api.utils.TestLanguageModule());
            WindowUtils.invokeWindow(new StartupSettingsPanel());
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton newFileRadioButton;
    private javax.swing.JRadioButton reopenSessionRadioButton;
    private javax.swing.JRadioButton startEmptyRadioButton;
    private javax.swing.JLabel startupBehaviorLabel;
    // End of variables declaration//GEN-END:variables

    private void notifyModified() {
        if (settingsModifiedListener != null) {
            settingsModifiedListener.wasModified();
        }
    }

    @Override
    public void setSettingsModifiedListener(SettingsModifiedListener listener) {
        settingsModifiedListener = listener;
    }
}
